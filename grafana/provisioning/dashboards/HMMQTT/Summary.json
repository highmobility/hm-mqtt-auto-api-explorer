{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": null,
  "graphTooltip": 1,
  "id": 4,
  "iteration": 1637589161574,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": "${hmmqtt}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Last \\*$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.2.2",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "diagnostics",
          "orderByTime": "ASC",
          "policy": "example-rp",
          "query": "import \"experimental\"\r\nfrom(bucket: \"something\")\r\n  // range start is fixed , else it will load only selected range devices\r\n  |> range(start: 2010-05-22T23:30:00Z, stop: v.timeRangeStop) \r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"dashboard_lights\" or r[\"_measurement\"] == \"diagnostics\")\r\n  |> unique(column: \"topic_vin\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"diagnostics_odometer_data_value\" )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"_table\")\r\n  |> group()\r\n  |> count(column: \"topic_vin\")",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "diagnostics_odometer_data_value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "sum"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Vehicles currently enrolled",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "topic_vin"
              ],
              "reducer": "lastNotNull"
            },
            "replaceFields": true
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": "${hmmqtt}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dateTimeAsSystem"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 6,
        "y": 0
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.2.2",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "topic_vin"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "maintenance",
          "orderByTime": "ASC",
          "policy": "example-rp",
          "query": "from(bucket: \"something\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"maintenance\" and r[\"_field\"]==\"maintenance_next_inspection_date_data\")\r\n  |> map(fn: (r) => ({ r with newvalue: (uint(v:uint(v: time(v: r._value )) < uint(v: now()))) }))\r\n  |> filter(fn: (r) => r.newvalue == 1 )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> unique(column: \"topic_vin\")\r\n  |> count(column: \"newvalue\")",
          "refId": "A",
          "resultFormat": "logs",
          "select": [
            [
              {
                "params": [
                  "maintenance_next_inspection_date_data"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "capability",
              "operator": "=",
              "value": "maintenance"
            }
          ]
        }
      ],
      "title": "Vehicles with overdue service",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": "${hmmqtt}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dateTimeAsSystem"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 0
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.2.2",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "topic_vin"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "maintenance",
          "orderByTime": "ASC",
          "policy": "example-rp",
          "query": "from(bucket: \"something\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"dashboard_lights\") \r\n  |> unique(column: \"topic_vin\")\r\n  |> aggregateWindow(every: 1w, fn: first, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => r.dashboard_lights_dashboard_lights_data_state == \"on\") \r\n  |> group(columns: [\"_time\"], mode:\"by\")\r\n  |> count(column: \"dashboard_lights_dashboard_lights_data_state\")\r\n  |> group()\r\n  |> yield(name: \"delivered\")",
          "refId": "A",
          "resultFormat": "logs",
          "select": [
            [
              {
                "params": [
                  "maintenance_next_inspection_date_data"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "capability",
              "operator": "=",
              "value": "maintenance"
            }
          ]
        }
      ],
      "title": "Warnings resolved in past week",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": "${hmmqtt}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 0
      },
      "id": 5,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "count"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "titleSize": 1
        },
        "textMode": "value"
      },
      "pluginVersion": "8.2.2",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "dashboard_lights",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"something\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"dashboard_lights\") \r\n  |> unique(column: \"topic_vin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: first, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => r.dashboard_lights_dashboard_lights_data_state == \"on\") \r\n  |> group(columns: [\"_time\"], mode:\"by\")\r\n  |> count(column: \"dashboard_lights_dashboard_lights_data_state\")\r\n  |> group()\r\n  |> yield(name: \"delivered\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dashboard_lights_dashboard_lights_data_state"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              }
            ]
          ],
          "tags": [
            {
              "key": "property",
              "operator": "=",
              "value": "dashboard_lights"
            }
          ]
        }
      ],
      "title": "Vehicles with critical health warnings",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": "${hmmqtt}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.2.2",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "property"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "diagnostics",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"something\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"diagnostics\" and r._field == \"diagnostics_odometer_data_value\" )\r\n  |> unique(column: \"topic_vin\")\r\n  |> group(columns: [\"property\"])\r\n  |> cumulativeSum(columns: [\"_value\"])\r\n  |> aggregateWindow(every: 1d, fn: last, createEmpty: false)\r\n  |> sort(columns:[\"_time\"],desc: false)\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "diagnostics_odometer_data_value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Daily total distance driven",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "hmmqtt-influxQL18",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dateTimeAsSystem"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 8
      },
      "id": 7,
      "options": {
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.2.2",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "topic_vin"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "maintenance",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"something\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"maintenance\" and r[\"_field\"]==\"maintenance_next_inspection_date_data\")\r\n  |> map(fn: (r) => ({ r with newvalue: (uint(v:uint(v: time(v: r._value )) < uint(v: now()))) }))\r\n  |> filter(fn: (r) => r.newvalue == 1 )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> unique(column: \"topic_vin\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "maintenance_next_inspection_date_data"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Vehicles with Service Due - By Month",
      "transformations": [
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "time",
                "targetField": "maintenance.last {topic_vin: 1GCRCSEA4CZ129760}"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": "${hmmqtt}",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dateTimeAsSystem"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 8,
      "options": {
        "frameIndex": 0,
        "showHeader": true
      },
      "pluginVersion": "8.2.2",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "topic_vin"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "maintenance",
          "orderByTime": "ASC",
          "policy": "example-rp",
          "query": "from(bucket: \"something\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"maintenance\" and r[\"_field\"]==\"maintenance_next_inspection_date_data\")\r\n  |> map(fn: (r) => ({ r with newvalue: (uint(v:uint(v: time(v: r._value )) < uint(v: now()))) }))\r\n  |> filter(fn: (r) => r.newvalue == 1 )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> unique(column: \"topic_vin\")\r\n",
          "refId": "A",
          "resultFormat": "logs",
          "select": [
            [
              {
                "params": [
                  "maintenance_next_inspection_date_data"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "capability",
              "operator": "=",
              "value": "maintenance"
            }
          ]
        }
      ],
      "title": "Daily total distance driven",
      "transformations": [],
      "type": "table"
    }
  ],
  "schemaVersion": 31,
  "style": "dark",
  "tags": [
    "summary"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": [
            "hmmqtt-flux"
          ],
          "value": [
            "hmmqtt-flux"
          ]
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "hmmqtt",
        "multi": true,
        "name": "hmmqtt",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "/hmmqtt-*/",
        "skipUrlSync": false,
        "type": "datasource"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Summary",
  "uid": "OrH6nGt7k",
  "version": 2
}s